---
title: "Namaste National Analysis - Ordinations"
output-file: "2024-07-30 PCA Slopes EIR, Rich, Div, Live by Site"
date: today
format: 
    pdf:
        toc: true
    html:
        toc: true
        toc-location: left
echo: false
embed-resources: true
warning: false
message: false
error: true
---

```{r}
library(tidyverse)
library(vegan)
library(ggfortify)
library(fastDummies)
```

Using the slopes-by-site data frame.  

```{r}
dat <- read.csv(here::here("data",
                           "compiled",
                           "slopesAndExpl_bySite.csv"))

dat_main <- dat %>% 
    select(Reserve,
           SiteID,
           Total.live.veg_slope,
           EIR_slope,
           Richness_slope,
           SWdiv_slope,
           tide_range_slope:Region,
           condition = NERRs_Landscape_resiliency_condition_sum_quantile,
           SET_change:last_col()
           )

responses <- dat_main %>% 
    select(Total.live.veg_slope:SWdiv_slope)
row.names(responses) = paste(dat_main$Reserve, dat_main$SiteID, sep = "-")

responses_scaled <- responses %>% 
    mutate(across(everything(), function(x) scale(x)[,1]))

explanatory <- dat_main[which(!(names(dat_main) %in% names(responses)))]
```

# PCA  

is this appropriate?  

```{r}
responses_scaled %>%
    mutate(site_num = row_number()) %>% 
    pivot_longer(-site_num,
                 names_to = "response",
                 values_to = "normalized_value") %>% 
    ggplot(aes(x = normalized_value,
               fill = response)) +
    geom_histogram(col = "gray20") +
    facet_wrap(~response) +
    theme(legend.position = "none")
```

Ehhhhh, not terrible.


```{r}
veg_pca <- prcomp(responses_scaled, scale. = FALSE)

# veg_pca <- rda(responses_scaled)
```

```{r}
# see ?ggbiplot for options
autoplot(veg_pca,
         shape = FALSE,
         loadings = TRUE,
         loadings.label = TRUE,
         loadings.label.repel = TRUE,
         label = TRUE)
```


Some outliers there, is NMDS more appropriate? Need to use Euclidean distance but ranking that might be better than the raw distances.  

# NMDS  

```{r}
veg_mds <- metaMDS(responses_scaled,
                   distance = "euclidean",
                   autotransform = FALSE,
                   trace = FALSE)
veg_mds$stress
```

```{r}
data.scores <- as.data.frame(scores(veg_mds), display = "sites")
loadings <- as.data.frame(scores(veg_mds), display = "species")
ggplot(data.scores,
       aes(x = NMDS1,
           y = NMDS2)) +
    geom_point()

# ordiplot(veg_mds, type = "text")
# 
# spps <- envfit(veg_mds, responses_scaled)
# plot(spps)
```

That didn't do better. 

Get all values above 0 and try Bray-Curtis?  

```{r}
min(responses_scaled)

responses_scaled2 <- responses_scaled + 3.4

veg_mds_bray <- metaMDS(responses_scaled2, distance = "bray", trace = FALSE)
ordiplot(veg_mds_bray,
         type = "text")

plot(veg_mds_bray, type="n") |>
  text("sites", cex = 0.7) |>
  text("species", arrows = TRUE, length=0.05, col="blue")

```

Still looks the same.

Interesting that the biggest outliers are all Gulf of Mexico sites, with the exception of NOC-RC-MM. This tells us that the Gulf experiences different processes, maybe?

What happens if we take out the Gulf sites?  

# PCA v2  


## Non-Gulf only  

```{r}
dat_main_non.gulf <- dat_main %>% 
    filter(!(Reserve %in% c("APA-LSM", "APA-PC", "GND", "MAR")))

responses_non.gulf <- dat_main_non.gulf %>% 
    select(Total.live.veg_slope:SWdiv_slope)
row.names(responses_non.gulf) = paste(dat_main_non.gulf$Reserve, dat_main_non.gulf$SiteID, sep = "-")

responses_scaled_non.gulf <- responses_non.gulf %>% 
    mutate(across(everything(), function(x) scale(x)[,1]))

explanatory_non.gulf <- dat_main_non.gulf[which(!(names(dat_main_non.gulf) %in% names(responses_non.gulf)))]
```

### PCA  

```{r}
veg_pca_non.gulf <-  prcomp(responses_scaled_non.gulf, scale. = FALSE)
autoplot(veg_pca_non.gulf,
         shape = FALSE,
         loadings = TRUE,
         loadings.label = TRUE,
         loadings.label.repel = TRUE,
         label = TRUE,
         label.size = rel(3),
         main = "Non-Gulf of Mexico sites only")
```

```{r}
autoplot(veg_pca,
         shape = FALSE,
         loadings = TRUE,
         loadings.label = TRUE,
         loadings.label.repel = TRUE,
         label = TRUE,
         label.size = rel(3),
         main = "All sites")
```

Removing Gulf sites doesn't change the gradients really. That's probably good? Means the Gulf sites are just.... more extreme than the rest, but same processes?  


## PCA with add'l loadings (envfit)  

Using main explanatory variables that are going into LME/SEM portion.  

```{r}
main_expl <- c("Geomorphology", "Tidal_Range", "Salinity_category",
               "SLR_last19yrs", "NERR_Region", "condition",
               "SET_minus_SLR_19yrs", "proportion_low")


# select and scale explanatory vars
explanatory_sub <- explanatory %>% 
    select(all_of(main_expl)) %>% 
    mutate(across(c(SLR_last19yrs, condition, SET_minus_SLR_19yrs, proportion_low), scale))

# turn categorical ones into dummy columns
explanatory_sub <- dummy_cols(explanatory_sub, remove_first_dummy = FALSE,
                               remove_selected_columns = TRUE)

# split into numeric and categorical data frames
# for different colored plotting
expl_sub_numeric <- explanatory_sub %>% 
    select(SLR_last19yrs:proportion_low)
expl_sub_cat <- explanatory_sub[ , which(!(names(explanatory_sub) %in% names(expl_sub_numeric)))]
# put it on a similar sd scale as categorical vars by multiplying by 2
expl_sub_cat <- expl_sub_cat*2


# adapt those for non-gulf sites
# select and scale explanatory vars
explanatory_sub <- explanatory_non.gulf %>% 
    select(all_of(main_expl)) %>% 
    mutate(across(c(SLR_last19yrs, condition, SET_minus_SLR_19yrs, proportion_low), scale))

# turn categorical ones into dummy columns
explanatory_sub <- dummy_cols(explanatory_sub, remove_first_dummy = FALSE,
                               remove_selected_columns = TRUE)

# split into numeric and categorical data frames
# for different colored plotting
expl_sub_numeric_non.gulf <- explanatory_sub %>% 
    select(SLR_last19yrs:proportion_low)
expl_sub_cat_non.gulf <- explanatory_sub[ , which(!(names(explanatory_sub) %in% names(expl_sub_numeric_non.gulf)))]
expl_sub_cat_non.gulf <- expl_sub_cat_non.gulf*2


# create separate envfits and data frames of coords for each type
# all sites
# numeric
addl_num <- envfit(veg_pca, expl_sub_numeric, na.rm = TRUE)
vector_num <- as.data.frame(scores(addl_num, "vectors"))
mult_num <- ordiArrowMul(addl_num)  # multiplier for scaling plots
# categorical
addl_cat <- envfit(veg_pca, expl_sub_cat, na.rm = TRUE)
vector_cat <- as.data.frame(scores(addl_cat, "vectors"))

# non-gulf
# numeric
addl_num_non.gulf <- envfit(veg_pca_non.gulf, expl_sub_numeric_non.gulf, na.rm = TRUE)
vector_num_non.gulf <- as.data.frame(scores(addl_num_non.gulf, "vectors"))
mult_num_non.gulf <- ordiArrowMul(addl_num_non.gulf)  # multiplier for scaling plots
# categorical
addl_cat_non.gulf <- envfit(veg_pca_non.gulf, expl_sub_cat_non.gulf, na.rm = TRUE)
vector_cat_non.gulf <- as.data.frame(scores(addl_cat_non.gulf, "vectors"))
```


# PCA Plots - All Sites  

## Only Responses overlaid  

```{r}
# plot all sites
p <- autoplot(veg_pca,
         shape = FALSE,
         loadings = TRUE,
         loadings.label = TRUE,
         loadings.label.repel = TRUE,
         label = TRUE,
         label.size = rel(3),
         main = "All sites") 
p

# points only
ppts <- autoplot(veg_pca,
         loadings = TRUE,
         loadings.label = TRUE,
         loadings.label.repel = TRUE,
         label = FALSE,
         main = "All sites") 
```


## Numeric Loadings overlaid  

```{r}
p2 <- p +
    geom_segment(data = vector_num,
                 aes(x = 0, y = 0,
                     xend = PC1, yend = PC2),
                 col = "blue") +
    geom_text(data = vector_num,
              aes(x = PC1, y = PC2),
              label = rownames(vector_num),
              col = "blue")

p2
```



## Categorical Loadings overlaid  

```{r}
p3 <- ppts +
    geom_segment(data = vector_cat,
                 aes(x = 0, y = 0,
                     xend = PC1, yend = PC2),
                 col = "purple") +
    geom_text(data = vector_cat,
              aes(x = PC1, y = PC2),
              label = rownames(vector_cat),
              col = "purple",
              size = rel(3))
p3
```



## Numeric and Categorical Loadings overlaid  


```{r}
ppts +
    geom_segment(data = vector_num,
                 aes(x = 0, y = 0,
                     xend = PC1, yend = PC2),
                 col = "blue") +
    geom_text(data = vector_num,
              aes(x = PC1, y = PC2),
              label = rownames(vector_num),
              col = "blue") +
    geom_segment(data = vector_cat,
                 aes(x = 0, y = 0,
                     xend = PC1, yend = PC2),
                 col = "purple") +
    geom_text(data = vector_cat,
              aes(x = PC1, y = PC2),
              label = rownames(vector_cat),
              col = "purple",
              size = rel(3))
```


## Color by categories instead  

```{r}
# divide by the square root of number of rows
# to get graph scaling factor
pc_and_expl <- cbind(scores(veg_pca)/sqrt(nrow(explanatory)), explanatory)
pc_and_expl_non.gulf <- cbind(scores(veg_pca_non.gulf)/sqrt(nrow(explanatory_non.gulf)), explanatory_non.gulf)
```


```{r}
p <- autoplot(veg_pca,
         shape = FALSE,
         loadings = TRUE,
         loadings.label = TRUE,
         loadings.label.repel = TRUE,
         label = FALSE,
         main = "All sites",
         scale = 1) 
num_loadings <- geom_segment(data = vector_num,
                             aes(x = 0, y = 0,
                                 xend = PC1, yend = PC2),
                             col = "blue") 
num_labels <- geom_text(data = vector_num,
                        aes(x = PC1, y = PC2),
                        label = rownames(vector_num),
                        col = "blue")

p +
    geom_point(data = pc_and_expl,
               aes(x = PC1,
                   y = PC2,
                   col = NERR_Region),
               size = 3, alpha = 0.8) +
    khroma::scale_color_muted() +
    labs(subtitle = "Colored by Region") +
    num_loadings +
    num_labels
    


p +
    geom_point(data = pc_and_expl,
               aes(x = PC1,
                   y = PC2,
                   col = Geomorphology),
               size = 3, alpha = 0.8) +
    khroma::scale_color_muted() +
    labs(subtitle = "Colored by Geomorphology") +
    num_loadings +
    num_labels

p +
    geom_point(data = pc_and_expl,
               aes(x = PC1,
                   y = PC2,
                   col = Salinity_category),
               size = 3, alpha = 0.8) +
    khroma::scale_color_muted() +
    labs(subtitle = "Colored by Salinity Category") +
    num_loadings +
    num_labels


p +
    geom_point(data = pc_and_expl,
               aes(x = PC1,
                   y = PC2,
                   col = Tidal_Range),
               size = 3, alpha = 0.8) +
    khroma::scale_color_muted() +
    labs(subtitle = "Colored by Tidal range") +
    num_loadings +
    num_labels
```




# PCA Plots - Non-Gulf Sites  

## Only Responses overlaid  

```{r}
# plot all sites
p <- autoplot(veg_pca_non.gulf,
         shape = FALSE,
         loadings = TRUE,
         loadings.label = TRUE,
         loadings.label.repel = TRUE,
         label = TRUE,
         label.size = rel(3),
         main = "Non-Gulf sites") 
p

# points only
ppts <- autoplot(veg_pca_non.gulf,
         loadings = TRUE,
         loadings.label = TRUE,
         loadings.label.repel = TRUE,
         label = FALSE,
         main = "Non-Gulf sites") 
```


## Numeric Loadings overlaid  

```{r}
p2 <- p +
    geom_segment(data = vector_num_non.gulf,
                 aes(x = 0, y = 0,
                     xend = PC1, yend = PC2),
                 col = "blue") +
    geom_text(data = vector_num_non.gulf,
              aes(x = PC1, y = PC2),
              label = rownames(vector_num_non.gulf),
              col = "blue")

p2
```



## Categorical Loadings overlaid  

```{r}
p3 <- ppts +
    geom_segment(data = vector_cat_non.gulf,
                 aes(x = 0, y = 0,
                     xend = PC1, yend = PC2),
                 col = "purple") +
    geom_text(data = vector_cat_non.gulf,
              aes(x = PC1, y = PC2),
              label = rownames(vector_cat_non.gulf),
              col = "purple",
              size = rel(3))
p3
```



## Numeric and Categorical Loadings overlaid  

Individual points no longer labelled because it was way too much to read.  

```{r}
ppts+
    geom_segment(data = vector_num_non.gulf,
                 aes(x = 0, y = 0,
                     xend = PC1, yend = PC2),
                 col = "blue") +
    geom_text(data = vector_num_non.gulf,
              aes(x = PC1, y = PC2),
              label = rownames(vector_num_non.gulf),
              col = "blue") +
    geom_segment(data = vector_cat_non.gulf,
                 aes(x = 0, y = 0,
                     xend = PC1, yend = PC2),
                 col = "purple") +
    geom_text(data = vector_cat_non.gulf,
              aes(x = PC1, y = PC2),
              label = rownames(vector_cat_non.gulf),
              col = "purple",
              size = rel(3))
```

## Colored by Category  


```{r}
p <- autoplot(veg_pca_non.gulf,
         shape = FALSE,
         loadings = TRUE,
         loadings.label = TRUE,
         loadings.label.repel = TRUE,
         label = FALSE,
         main = "All sites",
         scale = 1) 
num_loadings <- geom_segment(data = vector_num_non.gulf,
                             aes(x = 0, y = 0,
                                 xend = PC1, yend = PC2),
                             col = "blue") 
num_labels <- geom_text(data = vector_num_non.gulf,
                        aes(x = PC1, y = PC2),
                        label = rownames(vector_num_non.gulf),
                        col = "blue")



p +
    geom_point(data = pc_and_expl_non.gulf,
               aes(x = PC1,
                   y = PC2,
                   col = NERR_Region),
               size = 3, alpha = 0.8) +
    khroma::scale_color_muted() +
    labs(subtitle = "Colored by Region") +
    num_loadings +
    num_labels


p +
    geom_point(data = pc_and_expl_non.gulf,
               aes(x = PC1,
                   y = PC2,
                   col = Geomorphology),
               size = 3, alpha = 0.8) +
    khroma::scale_color_muted() +
    labs(subtitle = "Colored by Geomorphology") +
    num_loadings +
    num_labels

p +
    geom_point(data = pc_and_expl_non.gulf,
               aes(x = PC1,
                   y = PC2,
                   col = Salinity_category),
               size = 3, alpha = 0.8) +
    khroma::scale_color_muted() +
    labs(subtitle = "Colored by Salinity Category") +
    num_loadings +
    num_labels


p +
    geom_point(data = pc_and_expl_non.gulf,
               aes(x = PC1,
                   y = PC2,
                   col = Tidal_Range),
               size = 3, alpha = 0.8) +
    khroma::scale_color_muted() +
    labs(subtitle = "Colored by Tidal range") +
    num_loadings +
    num_labels
```


# Other  

## Condition?  

```{r}
ggplot(dat_main, aes(x = Reserve, y = condition)) + geom_jitter() + theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
```

